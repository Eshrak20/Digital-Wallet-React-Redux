// import * as React from "react";
// import {
//   Sidebar,
//   SidebarContent,
//   SidebarGroup,
//   SidebarGroupContent,
//   SidebarGroupLabel,
//   SidebarHeader,
//   SidebarMenu,
//   SidebarMenuButton,
//   SidebarMenuItem,
//   SidebarRail,
// } from "@/components/ui/sidebar";
// import { Link, useLocation } from "react-router";
// import { getSidebarItems } from "@/utils/getSidebarItems";
// import { useGetMyProfileQuery } from "@/redux/api/userApi";

// // Using Feather Icons for a clean, professional look
// import {
//   FiHome,
//   FiUser,
//   FiSettings,
//   FiPieChart,
//   FiCalendar,
//   FiChevronDown,
//   FiLogOut,
//   FiBell,
//   FiList,
//   FiMenu,
//   FiChevronLeft,
// } from "react-icons/fi";
// import { ModeToggle } from "@/layout/ModeToggler";
// import { Button } from "@/components/ui/button";
// import { LogOutIcon } from "lucide-react";
// import { useDispatch } from "react-redux";
// import { authApi, useLogoutUserMutation } from "@/redux/api/authApi";
// import { toast } from "react-toastify";
// import { handleApiError } from "@/utils/handleApiError";

// export function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {
//   const { data: userData } = useGetMyProfileQuery(undefined);
//   const location = useLocation();
//   const [expandedGroups, setExpandedGroups] = React.useState({});
//   const [collapsed, setCollapsed] = React.useState(false);

//   const role = userData?.data?.data?.role;
//   const data = {
//     navMain: getSidebarItems(role),
//   };
//   const [logout] = useLogoutUserMutation();
//   const dispatch = useDispatch();

//   const handleLogout = async () => {
//     try {
//       await logout().unwrap();
//       dispatch(authApi.util.resetApiState());
//       toast.error("Logout successfully!");
//     } catch (err) {
//       console.error("Failed to logout:", err);
//       handleApiError(err);
//     }
//   };

//   const toggleGroup = (title: string) => {
//     setExpandedGroups((prev) => ({
//       ...prev,
//       [title]: !prev[title],
//     }));
//   };

//   const getIcon = (title) => {
//     const iconMap = {
//       Dashboard: <FiHome />,
//       Profile: <FiUser />,
//       Analytics: <FiPieChart />,
//       Settings: <FiSettings />,
//       Schedule: <FiCalendar />,
//       // Add more icon mappings as needed
//       "User Management": <FiUser />,
//       Reports: <FiPieChart />,
//       // You can add more icons here
//     };
//     return iconMap[title] || <FiList />;
//   };

//   return (
//     <Sidebar
//       {...props}
//       className={`transition-all duration-300 ${
//         collapsed ? "w-24" : "w-64"
//       } bg-white dark:bg-gray-950 text-gray-800 dark:text-gray-200 border-r border-gray-200 dark:border-gray-800`}
//     >
//       <SidebarHeader className="items-center p-4 border-b border-gray-200 dark:border-gray-800">
//         <div className="flex items-center justify-between w-full">
//           <Link to="/" className="flex items-center space-x-2">
//             {!collapsed && (
//               <span className="text-xl font-bold text-gray-900 dark:text-white">
//                 WalletApp
//               </span>
//             )}
//             {collapsed && (
//               <div className="w-10 h-10 rounded-full bg-pink-600 flex items-center justify-center text-white font-bold text-lg">
//                 WA
//               </div>
//             )}
//           </Link>

//           <button
//             onClick={() => setCollapsed(!collapsed)}
//             className="p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-800 transition-colors"
//           >
//             <div className="w-6 h-6 flex items-center justify-center">
//               <FiChevronLeft
//                 className={`transform transition-transform text-gray-500 ${
//                   collapsed ? "rotate-180" : ""
//                 }`}
//               />
//             </div>
//           </button>
//         </div>
//       </SidebarHeader>

//       {!collapsed && (
//         <div className="p-4 border-b border-gray-200 dark:border-gray-800">
//           <div className="flex items-center space-x-3">
//             <div className="w-10 h-10 rounded-full bg-pink-600 flex items-center justify-center text-white font-bold text-lg">
//               {userData?.data?.data?.name?.charAt(0) || "U"}
//             </div>
//             <div className="flex-1 min-w-0">
//               <p className="font-medium truncate">
//                 {userData?.data?.data?.name || "User"}
//               </p>
//               <p className="text-sm text-gray-500 dark:text-gray-400 truncate">
//                 {userData?.data?.data?.role || "Member"}
//               </p>
//             </div>
//             <button className="p-2 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-800 transition-colors">
//               <FiBell className="text-gray-600 dark:text-gray-300" />
//             </button>
//           </div>
//         </div>
//       )}

//       <SidebarContent className="custom-scrollbar">
//         {data.navMain.map((group) => (
//           <SidebarGroup key={group.title} className="border-none">
//             {!collapsed && (
//               <SidebarGroupLabel
//                 className="flex items-center justify-between px-4 py-3 text-xs font-semibold uppercase tracking-wider text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 cursor-pointer"
//                 onClick={() => toggleGroup(group.title)}
//               >
//                 <span>{group.title}</span>
//                 <FiChevronDown
//                   className={`transform transition-transform ${
//                     expandedGroups[group.title] ? "rotate-0" : "-rotate-90"
//                   }`}
//                 />
//               </SidebarGroupLabel>
//             )}

//             <SidebarGroupContent
//               className={
//                 expandedGroups[group.title] || collapsed ? "" : "hidden"
//               }
//             >
//               <SidebarMenu>
//                 {group.items.map((item) => (
//                   <SidebarMenuItem key={item.title}>
//                     <SidebarMenuButton
//                       asChild
//                       className={`mx-2 my-1 rounded-md transition-all duration-200 ${
//                         location.pathname === item.url
//                           ? "bg-pink-600 text-white shadow-lg"
//                           : "text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800"
//                       }`}
//                     >
//                       <Link
//                         to={item.url}
//                         className="flex items-center px-4 py-3"
//                       >
//                         <span className="mr-3 text-lg">
//                           {getIcon(item.title)}
//                         </span>
//                         {!collapsed && <span>{item.title}</span>}
//                       </Link>
//                     </SidebarMenuButton>
//                   </SidebarMenuItem>
//                 ))}
//               </SidebarMenu>
//             </SidebarGroupContent>
//           </SidebarGroup>
//         ))}
//       </SidebarContent>

//       <div className="mt-auto p-4 flex items-center justify-between border-t border-gray-200 dark:border-gray-800">
//         {!collapsed && (
//           <>
//             <Button
//               onClick={handleLogout}
//               className="cursor-pointer text-red-500 hover:text-red-400 focus:text-red-300 dark:text-red-400 dark:hover:text-red-300"
//               variant="ghost"
//             >
//               <LogOutIcon size={16} className="mr-2" />
//               Logout
//             </Button>
//             <ModeToggle />
//           </>
//         )}
//         {collapsed && (
//           <>
//             <div className="flex flex-col-reverse gap-y-5">
//               <div>
//                 <Button
//                   onClick={handleLogout}
//                   className="cursor-pointer text-red-500 hover:text-red-400 dark:text-red-400 dark:hover:text-red-300"
//                   variant="outline"
//                 >
//                   <LogOutIcon size={16} />
//                 </Button>
//               </div>

//               <div>
//                 <ModeToggle />
//               </div>
//             </div>
//           </>
//         )}
//       </div>

//       <SidebarRail />

//       <style>
//         {`
//           .custom-scrollbar::-webkit-scrollbar {
//             width: 4px;
//           }
//           .custom-scrollbar::-webkit-scrollbar-track {
//             background: transparent;
//           }
//           .custom-scrollbar::-webkit-scrollbar-thumb {
//             background: #cbd5e1;
//             border-radius: 10px;
//           }
//           .dark .custom-scrollbar::-webkit-scrollbar-thumb {
//             background: #475569;
//           }
//         `}
//       </style>
//     </Sidebar>
//   );
// }



///////////////// NEW //////////// But sundor na 


























// import * as React from "react";
// import {
//   Sidebar,
//   SidebarContent,
//   SidebarGroup,
//   SidebarGroupLabel,
//   SidebarHeader,
//   SidebarMenu,
//   SidebarMenuButton,
//   SidebarMenuItem,
// } from "@/components/ui/sidebar";
// import { Link, useLocation } from "react-router";
// import { getSidebarItems } from "@/utils/getSidebarItems";
// import { useGetMyProfileQuery } from "@/redux/api/userApi";

// import { LogOut, List, LayoutPanelLeft, Home } from "lucide-react";
// import { Button } from "@/components/ui/button";
// import { useDispatch } from "react-redux";
// import { authApi, useLogoutUserMutation } from "@/redux/api/authApi";
// import { toast } from "react-toastify";
// import { handleApiError } from "@/utils/handleApiError";
// import { ModeToggle } from "@/layout/ModeToggler";

// export function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {
//   const { data: userData } = useGetMyProfileQuery(undefined);
//   const location = useLocation();

//   const profile = userData?.data?.data;
//   const role = profile?.role;

//   const data = {
//     navMain: getSidebarItems(role),
//   };

//   const [logout] = useLogoutUserMutation();
//   const dispatch = useDispatch();

//   const handleLogout = async () => {
//     try {
//       await logout().unwrap();
//       dispatch(authApi.util.resetApiState());
//       toast.error("Logout successfully!");
//     } catch (err) {
//       console.error("Failed to logout:", err);
//       handleApiError(err);
//     }
//   };

//   return (
//     <Sidebar
//       {...props}
//       className="w-64 bg-gray-950 text-gray-400 border-r border-gray-800"
//     >
//       {/* HEADER with user info */}
//       <SidebarHeader className="p-6 border-b border-gray-800 flex items-center gap-4">
//         <div className="w-12 h-12 rounded-full bg-pink-600 flex items-center justify-center text-white font-bold text-xl">
//           {profile?.name?.charAt(0) || "U"}
//         </div>
//         <div className="flex flex-col flex-1 overflow-hidden font-poppins">
//           <span className="text-xl font-bold text-gray-50 truncate">
//             {profile?.name || "User"}
//           </span>
//           <span className="text-sm text-gray-400 truncate">
//             {profile?.email || "shadcn@example.com"}
//           </span>
//           <span className="text-sm text-gray-500 truncate capitalize">
//             {profile?.role || "guest"}
//           </span>
//         </div>
//         <Link to="/" title="Go Home">
//           <Button
//             variant="ghost"
//             size="icon"
//             className="hover:text-[#E2136E] hover:bg-gray-800"
//           >
//             <Home size={18} />
//           </Button>
//         </Link>
//       </SidebarHeader>

//       {/* MAIN NAV */}
//       <SidebarContent className="flex-1 custom-scrollbar">
//         {data.navMain.map((group) => (
//           <SidebarGroup key={group.title}>
//             <SidebarGroupLabel className="text-xs uppercase font-medium text-gray-500 tracking-wider px-4 py-3">
//               <div className="flex items-center gap-2">
//                 {group.title === "Projects" && <LayoutPanelLeft size={14} />}
//                 {group.title === "More" && <List size={14} />}
//                 <span>{group.title}</span>
//               </div>
//             </SidebarGroupLabel>
//             <SidebarMenu>
//               {group.items.map((item) => (
//                 <SidebarMenuItem key={item.title}>
//                   <SidebarMenuButton
//                     asChild
//                     className={`
//                       mx-2 my-1 rounded-md transition-colors 
//                       ${
//                         location.pathname === item.url
//                           ? "bg-gray-800 text-gray-50"
//                           : "hover:bg-gray-800 hover:text-gray-50"
//                       }
//                     `}
//                   >
//                     <Link to={item.url} className="flex items-center px-2 py-2">
//                       <span className="mr-3">
//                         {item.icon ? item.icon : <List size={18} />}
//                       </span>
//                       <span>{item.title}</span>
//                     </Link>
//                   </SidebarMenuButton>
//                 </SidebarMenuItem>
//               ))}
//             </SidebarMenu>
//           </SidebarGroup>
//         ))}
//       </SidebarContent>

//       {/* FOOTER only logout + mode toggle */}
//       <div className="mt-auto p-4 flex items-center justify-between border-t border-gray-800">
//         <Button
//           onClick={handleLogout}
//           className="cursor-pointer text-red-500 hover:text-red-400 dark:text-red-400 dark:hover:text-red-300"
//           variant="ghost"
//         >
//           <LogOut size={16} className="mr-2" />
//           Logout
//         </Button>
//         <ModeToggle />
//       </div>

//       <style>
//         {`
//           .custom-scrollbar::-webkit-scrollbar {
//             width: 4px;
//           }
//           .custom-scrollbar::-webkit-scrollbar-track {
//             background: transparent;
//           }
//           .custom-scrollbar::-webkit-scrollbar-thumb {
//             background: #475569;
//             border-radius: 10px;
//           }
//           .dark .custom-scrollbar::-webkit-scrollbar-thumb {
//             background: #64748b;
//           }
//         `}
//       </style>
//     </Sidebar>
//   );
// }


